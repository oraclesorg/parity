#!/bin/bash

# Setup indica nodes
#
# Use with `clear` to reset blockchain state.

backup_node_data() {
	rm -rf $HOME/.poanetwork/indica/bak > /dev/null 2>&1
	mkdir $HOME/.poanetwork/indica/bak
	mv $HOME/.poanetwork/indica/node_* $HOME/.poanetwork/indica/bak > /dev/null 2>&1
}

setup_node() {
	let HOST_ID=$1
	let JSONRPC_PORT=8500+$HOST_ID

	curl --data '{"jsonrpc":"2.0","method":"parity_newAccountFromPhrase","params":["richie", "richie"],"id":0}' -H "Content-Type: application/json" -X POST localhost:$JSONRPC_PORT

	curl --data '{"jsonrpc":"2.0","method":"parity_newAccountFromPhrase","params":["node0", "node0"],"id":0}' -H "Content-Type: application/json" -X POST localhost:$JSONRPC_PORT

	curl --data '{"jsonrpc":"2.0","method":"parity_newAccountFromPhrase","params":["node'$HOST_ID'", "node'$HOST_ID'"],"id":0}' -H "Content-Type: application/json" -X POST localhost:$JSONRPC_PORT
}

if [[ $1 == "clear" ]]
then
	read -p "This script will erase existing blockchain state for all nodes. Continue? " -n 1 -r
	echo

	if [[ $REPLY =~ ^[Yy]$ ]]
	then
		backup_node_data
		echo Clearing complete.
		# echo Please launch all 3 indica nodes using \'indica-node {id}\' then run \'setup-indica\' again \(without the \'clear\' argument\).
	fi
else
	# setup_node 0
	# setup_node 1
	# setup_node 2

	# echo Your blockchain state for all nodes has been reset.
	# echo Please copy the new node 0 enode id to the \'indica-node-signer\' script and change the IP address to \'127.0.0.1\'.
	# echo You can now launch nodes using \'indica-node-signer\'.
	echo Use with 'clear' argument to clear node data.
fi








